openapi: 3.0.0
info:
  title: Social-API
  version: 1.0.0

servers:
  - url: http://localhost:9001
  - url: https://anti-social-mongo-the-soldiers.onrender.com

paths:
  
  
  /api/users:
    
    get:
      summary: Obtener todos los usuarios
      tags:
        - Usuarios
      responses:
        '200':
          description: Lista de usuarios obtenida correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: Error interno al obtener los usuarios

    post:
      summary: Crear un nuevo usuario
      tags:
        - Usuarios
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '201':
          description: Usuario creado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Error de validación al crear usuario

  /api/users/{id}:
    
    get:
      summary: Obtener un usuario por ID
      tags:
        - Usuarios
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Usuario encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: ID inválido
        '404':
          description: Usuario no encontrado
        '500':
          description: Error interno al obtener el usuario

    put:
      summary: Actualizar un usuario por ID
      tags:
        - Usuarios
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '200':
          description: Usuario actualizado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Usuario no encontrado
        '404':
          description: ID inválido o error al actualizar
        '500':
          description: Error interno al actualizar usuario

    delete:
      summary: Eliminar un usuario por ID
      tags:
        - Usuarios
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Usuario eliminado correctamente
        '400':
          description: ID inválido
        '404':
          description: Usuario no encontrado
        '500':
          description: Error interno al eliminar usuario


  /api/tags:
    
    get:
      summary: Obtener todas las tags
      tags:
        - Tags
      responses:
        '200':
          description: Lista de tags obtenida correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
        '500':
          description: Error interno al obtener las tags
    
    post:
      summary: Crear una nueva tag
      tags:
        - Tags
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagInput'
      responses:
        '201':
          description: Tag creada correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        '400':
          description: Error de validación al crear la tag
  
  /api/tags/{id}:
  
    get:
      summary: Obtener una tag por ID
      tags:
        - Tags
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Tag encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        '400':
          description: ID inválido
        '404':
          description: Tag no encontrada
        '500':
          description: Error interno al obtener la tag
    
    put:
      summary: Actualizar una tag por ID
      tags:
        - Tags
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagInput'
      responses:
        '200':
          description: Tag actualizada correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        '400':
          description: ID inválido o error al actualizar
        '404':
          description: Tag no encontrada
        '500':
          description: Error interno al actualizar la tag
    
    delete:
      summary: Eliminar una tag por ID
      tags:
        - Tags
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Tag eliminada correctamente
        '400':
          description: ID inválido
        '404':
          description: Tag no encontrada
        '500':
          description: Error interno al eliminar la tag
  
  
  /api/posts:
  
    get:
      summary: Obtener todos los posts
      tags:
        - Publicaciones
      responses:
        '200':
          description: Lista de publicaciones
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'

    post:
      summary: Crear una nueva publicación
      tags:
        - Publicaciones
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostInput'
      responses:
        '201':
          description: Publicación creada correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '500':
          description: Error interno para crear publicacion
  
  /api/posts/{id}:
    
    get:
      summary: Obtener publicación por ID
      tags:
        - Publicaciones
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID de la publicación
      responses:
        '200':
          description: Publicación encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '404':
          description: Publicación no encontrada
        '500':
          description: Error interno al obtener publicación

    put:
      summary: Actualizar publicación
      tags:
        - Publicaciones
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID de la publicación
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostInput'
      responses:
        '200':
          description: Publicación actualizada correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '404':
          description: Publicación no encontrada para actualización
        '500':
          description: Error interno al actualizar publicación

    delete:
      summary: Eliminar publicación
      tags:
        - Publicaciones
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID de la publicación
      responses:
        '200':
          description: Publicación eliminada correctamente
        '404':
          description: Publicación no encontrada para eliminación
        '500':
          description: Error interno al eliminar publicación
  
 
  /api/comments:
    get:
      summary: Obtener todos los comentarios
      tags:
        - Comentarios
      responses:
        '200':
          description: Lista de comentarios
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
        '500':
          description: Error interno al obtener los comentarios

    post:
      summary: Crear un nuevo comentario
      tags:
        - Comentarios
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentInput'
      responses:
        '201':
          description: Comentario creado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '400':
          description: Error de validación al crear comentario

  /api/comments/{id}:
    get:
      summary: Obtener un comentario por ID
      tags:
        - Comentarios
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID del comentario
      responses:
        '200':
          description: Comentario encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '404':
          description: Comentario no encontrado
        '500':
          description: Error interno al obtener comentario

    put:
      summary: Editar un comentario
      tags:
        - Comentarios
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID del comentario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentInput'
      responses:
        '200':
          description: Comentario actualizado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '400':
          description: Error de validación al actualizar comentario
        '404':
          description: Comentario no encontrado
        '500':
          description: Error interno al actualizar comentario

    delete:
      summary: Eliminar un comentario
      tags:
        - Comentarios
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID del comentario
      responses:
        '200':
          description: Comentario eliminado correctamente
        '404':
          description: Comentario no encontrado
        '500':
          description: Error interno al eliminar comentario

  /api/comments/per-month:
    get:
      summary: Obtener comentarios de los últimos X meses
      tags:
        - Comentarios
      parameters:
        - in: query
          name: months
          schema:
            type: integer
            minimum: 1
          description: Cantidad de meses hacia atrás 
      responses:
        '200':
          description: Lista de comentarios recientes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommentPerMonth'
        '500':
          description: Error interno al obtener comentarios por meses
          
  /api/archives:
    get:
      summary: Obtener todos los archivos subidos
      tags:
        - Archivos
      responses:
        '200':
          description: Lista de archivos
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Archive'
        '500':
          description: Error al obtener archivos
  /api/archives/upload:
    post:
      summary: Subir un nuevo archivo
      tags:
        - Archivos
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                archive:
                  type: string
                  format: binary
                  description: Archivo a subir
      responses:
        '201':
          description: Archivo subido correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Archive'
        '400':
          description: No se subió ningún archivo
        '500':
          description: Error al subir el archivo

  /api/archives/{id}:
    get:
      summary: Obtener un archivo por ID
      tags:
        - Archivos
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID del archivo
      responses:
        '200':
          description: Archivo encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Archive'
        '404':
          description: Archivo no encontrado
        '500':
          description: Error al obtener el archivo

    delete:
      summary: Eliminar un archivo
      tags:
        - Archivos
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID del archivo
      responses:
        '200':
          description: Archivo eliminado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Archive'
        '404':
          description: Archivo no encontrado
        '500':
          description: Error al eliminar el archivo



components:
 
  schemas:
 
    User:
      type: object
      properties:
        id:
          type: string
        nickname:
          type: string
    UserInput:
      type: object
      properties:
        nickname:
          type: string
      required:
        - nickname
  
    Tag:
      type: object
      properties:
        id:
          type: string
        tag:
          type: string
          example: "Programación"

    TagInput:
      type: object
      properties:
        tag:
          type: string
          example: "Programación"
      required:
        - tag
      
    Post:
      type: object
      properties:
        _id:
          type: string
          description: ID único del post
        userId:
          type: string
          description: ID del usuario que creó el post
        content:
          type: string
          description: Contenido del post
        creationDate:
          type: string
          format: date-time
          description: Fecha de creación del post
    PostInput:
      type: object
      properties:
        description:
          type: string
        author:
          type: string
        comments:
         type: array
         items:
           type: string
           nullable: true
        images:
          type: array
          items:
            type: string
            nullable: true
        tags:
          type: array
          items:
            type: string
          nullable: true
    CommentInput:
      type: object
      required:
        - userId
        - postId
      properties:
        comment:
          type: string
        creationDate:
          type: string
          format: date-time
        userId:
          type: string
          description: ID del usuario
        postId:
          type: string
          description: ID del post
        visible:
          type: boolean

    Comment:
      type: object
      properties:
        _id:
          type: string
        comment:
          type: string
        creationDate:
          type: string
          format: date-time
        userId:
          type: string
        postId:
          type: string
        visible:
          type: boolean

    CommentPerMonth:
      type: object
      properties:
        comment:
          type: string
        creationDate:
          type: string
          format: date-time

    Archive:
      type: object
      properties:
        _id:
          type: string
        archive:
          type: string
          description: URL completa de la imagen subida
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time